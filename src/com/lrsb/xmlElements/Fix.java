/**
 * LRSB - Linear Representation Spreedsheat Builder - Pauses Analysis of XML files generated by Translog II software.
 * For Translog II details, see http://bridge.cbs.dk/platform/?q=Translog-II.
 *
 * Developed with a grant from the Federal University of Uberlândia, Brazil (Project 2014PBG000883, Supervisor:
 * Prof. Dr. Igor A. Lourenço da Silva)
 *
 * Copyright (C) 2015 Gabriel Ed. da Silva
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
 * Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License along with this program. If not, see
 * http://www.gnu.org/licenses/.
 */
package com.lrsb.xmlElements;

/**
 * Classe responsável por armazenar as fixações do documento processado.
 * 
 * @author gabriel
 */
public class Fix implements XmlEvent {
    
    /**
     * Optou-se por manter o nome dos atributos do arquivo XML como nome dos
     * campos da classe.
     */

    /**
     * Tempo que ocorreu a fixação.
     */
    protected Integer time;

    /**
     * Tempo total da fixação.
     */
    protected Integer tt;

    /**
     * Janela da Fixação.
     */
    protected Integer win;

    /**
     * Cursor.
     */
    protected Integer cursor;

    /**
     * Construtor vazio.
     */
    public Fix() {
    }

    /**
     * Construtor da classe fix.
     *
     * @param time Valor do tempo (time) que ocorreu a fixação.
     * @param tt Valor do tempo total (tt) da fixação.
     * @param win Janela que ocorreu a fixação.
     * @param cursor Cursor.
     */
    public Fix(Integer time, Integer tt, Integer win, Integer cursor) {
        this.time = time;
        this.tt = tt;
        this.win = win;
        this.cursor = cursor;
    }

    /**
     * Método get da variável time.
     *
     * @return Retorna o valor do campo time.
     */
    @Override
    public Integer getTime() {
        return time;
    }

    /**
     * Método set da variável time.
     *
     * @param time Novo valor do campo time.
     */
    public void setTime(Integer time) {
        this.time = time;
    }

    /**
     * Método get da variável tt.
     *
     * @return Retorna o valor do campo tt.
     */
    public Integer getTt() {
        return tt;
    }

    /**
     * Método set da variável tt.
     *
     * @param tt Novo valor do campo tt.
     */
    public void setTt(Integer tt) {
        this.tt = tt;
    }

    /**
     * Método get da variável Win.
     *
     * @return Retorna o valor do campo win.
     */
    public Integer getWin() {
        return win;
    }

    /**
     * Método set da variável Win.
     *
     * @param win Novo valor do campo win.
     */
    public void setWin(Integer win) {
        this.win = win;
    }

    /**
     * Método get da variável cursor.
     *
     * @return Retorna o valor do campo cursor.
     */
    public Integer getCursor() {
        return cursor;
    }

    /**
     * Método get da variável cursor.
     *
     * @param cursor Novo valor do campo cursor.
     */
    public void setCursor(Integer cursor) {
        this.cursor = cursor;
    }
}
